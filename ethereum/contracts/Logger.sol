pragma solidity ^0.4.23;


contract Logger {

    address public owner;   // address of who creates the contract

    // Land addition event, use this to synchronize with the backend.
    event NewDeploy(address contractAddress, bytes2 _district, uint _document, uint _landParcel, uint _subaltern, address _ownerAddress);

    event Transfer(address contractAddress, uint _landParcel, uint _subaltern, address _landBuyer, address exOwner);

    // When the contract is deployed by truffle the account that deploys the contract became the owner,
    // in our case it will be the first account generated by ganache-cli (accounts[0]).
    constructor () public{
        owner = msg.sender;
        //        emit NewDeploy(msg.sender);
    }

    // Modifier to check if the address of the calling (from field in the transaction obj) is the owner.
    modifier isOwner{
        require(msg.sender == owner, "Not authorized");
        _;
    }

    function emitNewDeployEvent(address _contractAddress, bytes2 _district, uint _document, uint _landParcel, uint _subaltern, address _ownerAddress) public {
        emit NewDeploy(_contractAddress, _district, _document, _landParcel, _subaltern, _ownerAddress);
    }

    function emitTransfer(address _contractAddress, uint _landParcel, uint _subaltern, address _landBuyer, address exOwner) public {
        emit Transfer(_contractAddress, _landParcel, _subaltern, _landBuyer, exOwner);
    }
}